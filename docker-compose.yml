version: '3.8'

networks:
  canary-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  prometheus-data:
  grafana-data:
  nginx-logs:

services:
  # NGINX Load Balancer
  nginx:
    image: nginx:alpine
    container_name: nginx-lb
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/default.conf.template:/etc/nginx/conf.d/default.conf.template:ro
      - ./nginx/start-nginx.sh:/tmp/start-nginx.sh
      - ./nginx/reload-config.sh:/tmp/reload-config.sh
      - nginx-logs:/var/log/nginx
    environment:
      - LEGACY_WEIGHT=95
      - REFACTORED_WEIGHT=5
      - REFACTORED_PERCENTAGE=5
    command: ["sh", "-c", "apk add --no-cache gettext && chmod +x /tmp/start-nginx.sh && /tmp/start-nginx.sh"]
    depends_on:
      - legacy-app-1
      - legacy-app-2
      - refactored-app-1
      - refactored-app-2
    networks:
      canary-network:
        ipv4_address: 172.20.0.10
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Legacy Application Instances
  legacy-app-1:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_VERSION=legacy
    container_name: legacy-app-1
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=legacy
      - SERVER_PORT=8080
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,metrics,prometheus
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always
      - SPRING_APPLICATION_NAME=studycicd-legacy
    networks:
      canary-network:
        ipv4_address: 172.20.0.11
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  legacy-app-2:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_VERSION=legacy
    container_name: legacy-app-2
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=legacy
      - SERVER_PORT=8080
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,metrics,prometheus
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always
      - SPRING_APPLICATION_NAME=studycicd-legacy
    networks:
      canary-network:
        ipv4_address: 172.20.0.12
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Refactored Application Instances
  refactored-app-1:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_VERSION=refactored
    container_name: refactored-app-1
    ports:
      - "9080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=refactored
      - SERVER_PORT=8080
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,metrics,prometheus
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always
      - SPRING_APPLICATION_NAME=studycicd-refactored
    networks:
      canary-network:
        ipv4_address: 172.20.0.21
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  refactored-app-2:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_VERSION=refactored
    container_name: refactored-app-2
    ports:
      - "9081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=refactored
      - SERVER_PORT=8080
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,metrics,prometheus
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always
      - SPRING_APPLICATION_NAME=studycicd-refactored
    networks:
      canary-network:
        ipv4_address: 172.20.0.22
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Prometheus for Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/rules:/etc/prometheus/rules:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      canary-network:
        ipv4_address: 172.20.0.30
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana for Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    networks:
      canary-network:
        ipv4_address: 172.20.0.31
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Alertmanager for Alert Management
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      canary-network:
        ipv4_address: 172.20.0.32
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NGINX Exporter for Prometheus
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    ports:
      - "9113:9113"
    command:
      - '-nginx.scrape-uri=http://nginx:80/nginx_status'
    depends_on:
      - nginx
    networks:
      canary-network:
        ipv4_address: 172.20.0.33
    restart: unless-stopped